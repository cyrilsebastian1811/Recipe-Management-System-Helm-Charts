// Jenkinsfile (Declarative Pipeline)
pipeline {
    agent any
    options {
        skipDefaultCheckout(true)
    }
    environment {
        git_hash = null
        GIT_URL = "${env.GIT_URL}"
        DOCKERHUB_CREDENTIALS = credentials('dockerhub_credentials')
        BACKEND_ENDPOINT = "${env.BACKEND_ENDPOINT}"
    }
    stages {
        stage('Checkout helm-charts') { 
            steps {
                script {
                    git_info = checkout([
                        $class: 'GitSCM', branches: [[name: "*/${env.GIT_BRANCH}"]], 
                        doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], 
                        userRemoteConfigs: [[
                            credentialsId: 'GitToken', 
                            url: "${GIT_URL}"
                            'https://github.com/cyrilsebastian1811/helm-charts.git'
                        ]]
                    ])

                    git_hash = "${git_info.GIT_COMMIT[0..6]}"
                }

                echo "${git_hash}"
            }
        }
        stage('Build Frontend Helm Chart installation') { 
            steps {
                script {
                    sh "pwd"
                    sh "ls -a"
                    sh "helm upgrade frontend ./webapp-frontend -n ui --install --set imageCredentials.username=${DOCKERHUB_CREDENTIALS_USR},imageCredentials.password=${DOCKERHUB_CREDENTIALS_PSW},internalBackendService=lb-backend.api,backendServiceEndpoint=${BACKEND_ENDPOINT},imageCredentials.registry=https://index.docker.io/v1/"
                }
            }
        }
    }
}